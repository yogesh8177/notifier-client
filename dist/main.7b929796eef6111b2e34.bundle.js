webpackJsonp([1,4],{478:function(t,e){function n(t){throw new Error("Cannot find module '"+t+"'.")}n.keys=function(){return[]},n.resolve=n,t.exports=n,n.id=478},479:function(t,e,n){"use strict";var o=n(605),i=n(0),a=n(626);i.enableProdMode(),o.platformBrowserDynamic().bootstrapModule(a.AppModule)},625:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},a=n(0),s=function(){function t(){this.name="Notifier App"}return t=o([a.Component({selector:"my-app",template:"<home></home>"}),i("design:paramtypes",[])],t)}();e.AppComponent=s},626:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},a=n(0),s=n(60),r=n(40),c=n(152),l=n(589),f=n(625),p=n(629),d=n(630),u=n(627),h=function(){function t(){}return t=o([a.NgModule({imports:[s.BrowserModule,r.FormsModule,c.HttpModule,l.MaterialModule],declarations:[f.AppComponent,p.NotificationPanelComponent,d.NotificationComponent,u.HomeComponent],bootstrap:[f.AppComponent]}),i("design:paramtypes",[])],t)}();e.AppModule=h},627:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},a=n(0),s=function(){function t(){}return t=o([a.Component({selector:"home",template:n(803),styles:[n(800)]}),i("design:paramtypes",[])],t)}();e.HomeComponent=s},628:function(t,e,n){"use strict"},629:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},a=n(0),s=n(631),r=n(632),c=function(){function t(t,e){this.jobService=t,this.socket=e,this.notifications=[],this.name="Angular",this.statusMessages={online:"Connected to the server",offline:"Disconnected from server"},console.log(this.name),this.expanded="collapsed",this.onlineStatus="offline",this.tag="This is a job",this.count=0}return t.prototype.toggleNavigation=function(){this.expanded="collapsed"==this.expanded?"expanded":"collapsed","expanded"==this.expanded&&this.resetUnseenCount()},t.prototype.postAJob=function(){var t=this,e=this.generateJob();this.jobService.postJob(e).subscribe(function(n){t.response=n.json(),t.response.hasOwnProperty("data")&&"success"==t.response.data&&(t.addNotification(e),t.response=null)},function(t){return console.log(t)}),console.log("clicked")},t.prototype.ngOnInit=function(){this.notifier=this.socket.getSocket(),this.handleNotifications(this.notifier)},t.prototype.addNotification=function(t){this.notifications.unshift(t),localStorage.setItem("history",JSON.stringify(this.notifications))},t.prototype.generateJob=function(){var t={ID:this.notifier.id,message:this.tag,status:"pending",jobID:(new Date).getTime().toString(),finishTime:""};return t},t.prototype.handleNotifications=function(t){var e=this;t.on("connect",function(){e.onlineStatus="online",e.loadHistory(t.id)}),t.on("disconnect",function(){e.onlineStatus="offline"}),t.on("notification",function(t){console.log("notification: Job completed! "+t.jobID),e.updateNotification(t)})},t.prototype.updateNotification=function(t){this.count="expanded"==this.expanded?this.count:this.count+1;for(var e=this.notifications.length,n=e-1;n>=0;n--)this.notifications[n].jobID==t.jobID&&this.notifications[n].ID==t.client&&(this.notifications[n].status="finished",this.notifications[n].message+=" -finished",this.notifications[n].finishTime=" -- "+(new Date).toDateString(),console.log("called"));this.addToHistory()},t.prototype.loadHistory=function(t){var e;if(this.notifications=[],e=JSON.parse(localStorage.getItem("history")),null!=e){for(var n=0;n<e.length;n++)"pending"==e[n].status&&(e[n].status="failed",e[n].message+=" -failed"),this.notifications.push(e[n]);console.log(e);var o=parseInt(localStorage.getItem("unseen_count"));this.count=isNaN(o)?0:o}},t.prototype.addToHistory=function(){localStorage.setItem("history",JSON.stringify(this.notifications)),localStorage.setItem("unseen_count",this.count.toString())},t.prototype.clearNotifications=function(){localStorage.removeItem("history"),this.notifications.splice(0,this.notifications.length),this.resetUnseenCount()},t.prototype.resetUnseenCount=function(){this.count=0,localStorage.setItem("unseen_count","0")},o([a.Input(),i("design:type",String)],t.prototype,"tag",void 0),t=o([a.Component({selector:"notification-panel",template:n(804),styles:[n(801)],providers:[s.PostJobService,r.SocketService],animations:[a.trigger("onlineStatus",[a.state("online",a.style({background:"#63bc09",color:"#ecfc14","box-shadow":"0px 0px 3px 3px green"})),a.state("offline",a.style({background:"red",color:"#ffcc00","box-shadow":"0px 0px 3px 3px red"})),a.transition("online => offline",a.animate("200ms ease-in")),a.transition("offline => online",a.animate("200ms 200ms ease-out"))]),a.trigger("panelWidthTrigger",[a.state("expanded",a.style({width:"350px"})),a.state("collapsed",a.style({width:"38px"})),a.transition("collapsed => expanded",a.animate("300ms ease-in")),a.transition("expanded => collapsed",a.animate("300ms 300ms ease-out"))]),a.trigger("menuWidthTrigger",[a.state("expanded",a.style({width:"350px"})),a.state("collapsed",a.style({width:"45px"})),a.transition("collapsed => expanded",a.animate("200ms ease-in")),a.transition("expanded => collapsed",a.animate("200ms 200ms ease-out"))])]}),i("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.PostJobService&&s.PostJobService)&&e||Object,"function"==typeof(c="undefined"!=typeof r.SocketService&&r.SocketService)&&c||Object])],t);var e,c}();e.NotificationPanelComponent=c},630:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},a=n(0),s=n(628),r=function(){function t(){}return o([a.Input(),i("design:type",String)],t.prototype,"expanded",void 0),o([a.Input(),i("design:type","function"==typeof(e="undefined"!=typeof s.notification&&s.notification)&&e||Object)],t.prototype,"notif",void 0),t=o([a.Component({selector:"notification",template:n(805),styles:[n(802)],animations:[a.trigger("notifStatus",[a.state("pending",a.style({background:"#fff",color:"orange","border-bottom":"1px solid orange"})),a.state("failed",a.style({background:"#fff",color:"red","border-bottom":"1px solid red"})),a.state("finished",a.style({background:"#fff",color:"green","border-bottom":"1px solid green"})),a.transition("pending => finished",a.animate("200ms ease-in"))]),a.trigger("notifWidthTrigger",[a.state("expanded",a.style({width:"100%",display:"inline"})),a.state("collapsed",a.style({display:"none"})),a.transition("collapsed => expanded",a.animate("200ms ease-in")),a.transition("expanded => collapsed",a.animate("200ms 200ms ease-out"))])]}),i("design:paramtypes",[])],t);var e}();e.NotificationComponent=r},631:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},a=n(0),s=n(152);n(119);var r=function(){function t(t){this.http=t,this.Url="http://148.72.250.212:3000/job",this.header=new s.Headers,this.header.append("Content-Type","application/json")}return t.prototype.postJob=function(t){return this.http.post(this.Url,t,{headers:this.header})},t=o([a.Injectable(),i("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.Http&&s.Http)&&e||Object])],t);var e}();e.PostJobService=r},632:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},a=n(852),s=n(0),r=function(){function t(){this.Url="http://148.72.250.212:3001"}return t.prototype.getSocket=function(){return this.socket=a(this.Url),this.socket},t=o([s.Injectable(),i("design:paramtypes",[])],t)}();e.SocketService=r},800:function(t,e){t.exports=".form{width:1170px;margin:0 auto;padding:5px}.points li{padding-bottom:10px}@media only screen and (max-width:720px){body{width:100%}button,input[type=text]{width:87%}.notification-panel{min-height:100%;height:auto}.form{width:87%;margin-left:0}}"},801:function(t,e){t.exports='.notification-panel{position:absolute;background:#fff;width:450px;right:0;top:0;box-shadow:0 0 3px 3px #000;overflow-y:auto;height:auto;z-index:999;font-family:Raleway}.notification-panel header{height:38px;background:#000;cursor:pointer}.notification-panel:after{clear:right;content:""}.small{font-size:small}.badge{position:relative;display:block;text-align:center;padding-top:5px;width:24px;border-radius:5px;background:#fff;color:#000}.online-status{float:right;margin-top:10px;padding-right:25px;color:#fff}.online-status-icon{width:30px;position:absolute;background:#fff;left:auto;height:30px;top:2px;left:2px;border-radius:25px}.slider{position:absolute;right:42px;background:#2f4f4f;color:#fff;border-radius:5px 0 0 5px;box-shadow:0 0 3px 3px #2f4f4f;cursor:pointer;top:5px}@media only screen and (max-width:720px){.notification-panel{width:300px}}'},802:function(t,e){t.exports=".notif{position:relative;padding:4px;border-bottom:1px solid #d3d3d3}.notif-icon{width:20%}.notif-details{width:80%;padding:3px;font-family:Raleway}"},803:function(t,e){t.exports='<div class="primary">\n  <h2>Notifier App</h2>  \n</div>\n<notification-panel #panel></notification-panel>\n<div class="form">\n\n    <div class="card center">\n        <h3>Submit job</h3>\n        <input type="text" [(ngModel)] = "panel.tag" /><br> <label>Tag current job</label><br>\n        <label class="small">(Each job takes 3 seconds to complete!)</label><br><br>\n        <button (click)="panel.postAJob()">Submit job to run</button><br>\n        <label class="small"> (Click this button to submit dummy job!)</label><br><br>\n        <button (click)="panel.clearNotifications()">Clear notifications</button><br>\n        <label class="small"> (Click this button to clear notifications!)</label>\n    </div>\n    <br>\n    <div class="card">\n        <h3 class="center">Working of app</h3>\n        <ul class="points">\n            <li>Top right heading of the notification panel turns dark green when connected to server, turns red otherwise!</li>\n            <li>If you submit job and wait for 3 seconds before expanding notification panel, then you can see count of unseen notifications!</li>\n            <li>Once you expand the notification panel, unseen notification count becomes 0 and becomes invisible!</li>\n            <li>Click on notification panel to expand and/or collapse it!</li>\n            <li>Each job contains current time stamp as its ID</li>\n            <li>Color codes for notifications: <strong>Orange:</strong> job submitted and pending for completion, <strong>Green:</strong> job completed successfully, <strong>Red:</strong> job failed due to web app refresh!</li>\n            <li>Note that only currently submitted jobs can be stored in history, i.e after submitting a job or jobs for current session, if web app is refreshed, previous notifications are in history (LocalStorage)!</li>\n            <li>If a job is submitted and web page is refreshed before job completes, then after refresh that job notification will turn <strong>red</strong> denoting that job failed!</li>\n            <li>LocalStorage is used instead of session for old notification history!</li>\n        </ul>\n    </div>\n</div>'},804:function(t,e){t.exports='\n<div class="slider" (click)="toggleNavigation()" [@menuWidthTrigger]="expanded"><md-icon>list</md-icon></div>\n<div class="notification-panel" [@panelWidthTrigger]="expanded" >\n\n    <header (click)="toggleNavigation()">\n        <span class="online-status-icon" [@onlineStatus]="onlineStatus">\n            <span *ngIf="onlineStatus == \'online\'"><md-icon>lightbulb_outline</md-icon></span>\n            <span *ngIf="onlineStatus == \'offline\'"><md-icon>block</md-icon></span>\n        </span>\n        <span class="badge" *ngIf="count != 0">{{count}}</span>\n        <div class="online-status"  *ngIf="expanded == \'expanded\'">{{statusMessages[onlineStatus]}}</div>\n        <!--Indicator for connection is alive or suspended-->\n    </header>\n\n    <div class="notifications">\n        <!--Notifications container-->\n        <notification *ngFor="let n of notifications"\n                      [notif] = n\n                      [expanded] = expanded>\n        </notification>\n    </div>\n\n</div>\n'},805:function(t,e){t.exports='<div class="notif"  [@notifStatus] = "notif.status" >\n    <span class="notif-icon" >\n        <md-icon *ngIf="notif.status == \'pending\'" aria-label="Pending">assignment_late</md-icon>\n        <md-icon *ngIf="notif.status == \'failed\'" aria-label="Failed ">error</md-icon>\n        <md-icon *ngIf="notif.status == \'finished\'" aria-label="Completed ">check</md-icon>\n    </span>\n    <span class="notif-details" [@notifWidthTrigger] = "expanded">        \n        {{notif.message}} <span class="small-font">{{notif.finishTime}}</span>\n    </span>\n\n</div>'},860:function(t,e){},861:function(t,e,n){t.exports=n(479)}},[861]);